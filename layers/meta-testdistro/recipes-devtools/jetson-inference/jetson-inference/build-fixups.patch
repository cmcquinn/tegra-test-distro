Index: git/CMakeLists.txt
===================================================================
--- git.orig/CMakeLists.txt
+++ git/CMakeLists.txt
@@ -51,28 +51,9 @@ endif()
 
 
 # setup CUDA
-set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${CMAKE_CURRENT_SOURCE_DIR}/utils/cuda" )
 find_package(CUDA)
 message("-- CUDA version: ${CUDA_VERSION}")
 
-set(
-	CUDA_NVCC_FLAGS
-	${CUDA_NVCC_FLAGS}; 
-    -O3 
-	-gencode arch=compute_53,code=sm_53
-	-gencode arch=compute_62,code=sm_62
-)
-
-if(CUDA_VERSION_MAJOR GREATER 9)
-	message("-- CUDA ${CUDA_VERSION_MAJOR} detected, enabling SM_72")
-
-	set(
-		CUDA_NVCC_FLAGS
-		${CUDA_NVCC_FLAGS}; 
-		-gencode arch=compute_72,code=sm_72
-	)
-endif()
-
 # setup project output paths
 set(PROJECT_OUTPUT_DIR  ${PROJECT_BINARY_DIR}/${CMAKE_SYSTEM_PROCESSOR})
 set(PROJECT_INCLUDE_DIR ${PROJECT_OUTPUT_DIR}/include)
@@ -87,10 +68,14 @@ set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${PRO
 set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${PROJECT_OUTPUT_DIR}/lib)
 set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${PROJECT_OUTPUT_DIR}/lib)
 
+find_package(PkgConfig REQUIRED)
+pkg_check_modules(GSTREAMER REQUIRED gstreamer-1.0)
+pkg_check_modules(GLIB REQUIRED glib-2.0)
+pkg_check_modules(XML REQUIRED libxml-2.0)
 
 # build C/C++ library
 include_directories(${PROJECT_INCLUDE_DIR} ${PROJECT_INCLUDE_DIR}/jetson-inference ${PROJECT_INCLUDE_DIR}/jetson-utils)
-include_directories(/usr/include/gstreamer-1.0 /usr/lib/aarch64-linux-gnu/gstreamer-1.0/include /usr/include/glib-2.0 /usr/include/libxml2 /usr/lib/aarch64-linux-gnu/glib-2.0/include/)
+include_directories(${GSTREAMER_INCLUDE_DIRS} ${GLIB_INCLUDE_DIRS} ${XML_INCLUDE_DIRS})
 
 file(GLOB inferenceSources c/*.cpp c/*.cu calibration/*.cpp)
 file(GLOB inferenceIncludes c/*.h c/*.cuh calibration/*.h)
@@ -184,8 +169,8 @@ foreach(include ${inferenceIncludes})
 endforeach()
 
 # install symlink to networks and images
-install(CODE "execute_process( COMMAND ${CMAKE_COMMAND} -E create_symlink ${PROJECT_SOURCE_DIR}/data/networks ${CMAKE_INSTALL_PREFIX}/bin/networks )" )
-install(CODE "execute_process( COMMAND ${CMAKE_COMMAND} -E create_symlink ${PROJECT_SOURCE_DIR}/data/images ${CMAKE_INSTALL_PREFIX}/bin/images )" )
+#install(CODE "execute_process( COMMAND ${CMAKE_COMMAND} -E create_symlink ${PROJECT_SOURCE_DIR}/data/networks ${CMAKE_INSTALL_PREFIX}/bin/networks )" )
+#install(CODE "execute_process( COMMAND ${CMAKE_COMMAND} -E create_symlink ${PROJECT_SOURCE_DIR}/data/images ${CMAKE_INSTALL_PREFIX}/bin/images )" )
 
 # install the shared library
 install(TARGETS jetson-inference DESTINATION lib EXPORT jetson-inferenceConfig)
@@ -194,5 +179,5 @@ install(TARGETS jetson-inference DESTINA
 install(EXPORT jetson-inferenceConfig DESTINATION share/jetson-inference/cmake)
 
 # run ldconfig after installing
-install(CODE "execute_process( COMMAND ldconfig )")
+#install(CODE "execute_process( COMMAND ldconfig )")
 
Index: git/python/CMakeLists.txt
===================================================================
--- git.orig/python/CMakeLists.txt
+++ git/python/CMakeLists.txt
@@ -5,7 +5,9 @@
 #
 # If you want to support another version of Python, add it here.
 #
-set(PYTHON_BINDING_VERSIONS 2.7 3.6 3.7)
+if(NOT DEFINED PYTHON_BINDING_VERSIONS)
+  set(PYTHON_BINDING_VERSIONS 2.7 3.6 3.7)
+endif()
 
 message("-- trying to build Python bindings for Python versions:  ${PYTHON_BINDING_VERSIONS}")
 
Index: git/python/bindings/CMakeLists.txt
===================================================================
--- git.orig/python/bindings/CMakeLists.txt
+++ git/python/bindings/CMakeLists.txt
@@ -35,20 +35,27 @@ message("-- found Python library:  ${PYT
 
 include_directories(${PYTHON_INCLUDE_DIRS})
 
-# attempt to find numpy
-set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${CMAKE_CURRENT_SOURCE_DIR}" "${CMAKE_CURRENT_SOURCE_DIR}/../../utils/python/bindings")
-message("-- CMake module path:  ${CMAKE_MODULE_PATH}")
-find_package(NumPy QUIET)
+if(DEFINED NUMPY_PATH)
+  set(NUMPY_FOUND 1)
+  add_definitions(-DHAS_NUMPY)
+  include_directories(${NUMPY_PATH}/include)
+  link_directories(${NUMPY_PATH}/lib)
+else()
+  # attempt to find numpy
+  set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${CMAKE_CURRENT_SOURCE_DIR}" "${CMAKE_CURRENT_SOURCE_DIR}/../../utils/python/bindings")
+  message("-- CMake module path:  ${CMAKE_MODULE_PATH}")
+  find_package(NumPy QUIET)
 
-if(${NUMPY_FOUND})
+  if(${NUMPY_FOUND})
 	message("-- found NumPy version:  ${NUMPY_VERSION}")
 	message("-- found NumPy include:  ${NUMPY_INCLUDE_DIR}")
 
 	add_definitions(-DHAS_NUMPY)
 	include_directories(${NUMPY_INCLUDE_DIR})
 	link_directories(${NUMPY_INCLUDE_DIR}/../lib)
-else()
+  else()
 	message("-- NumPy not found")
+  endif()
 endif()
 
 # build the bindings
@@ -69,10 +76,11 @@ set_target_properties(jetson-inference-p
 					LIBRARY_OUTPUT_DIRECTORY "${CMAKE_LIBRARY_OUTPUT_DIRECTORY}/python/${PYTHON_VERSION_MAJOR}.${PYTHON_VERSION_MINOR}")
 
 # install to /usr/pythonX.X/dist-packages
-set(PYTHON_BINDING_INSTALL_DIR /usr/lib/python${PYTHON_VERSION_MAJOR}.${PYTHON_VERSION_MINOR}/dist-packages)
+if(NOT DEFINED PYTHON_BINDING_INSTALL_DIR)
+  set(PYTHON_BINDING_INSTALL_DIR /usr/lib/python${PYTHON_VERSION_MAJOR}.${PYTHON_VERSION_MINOR}/dist-packages)
+endif()
 
 install(TARGETS jetson-inference-python-${PYTHON_VERSION_MAJOR}${PYTHON_VERSION_MINOR} DESTINATION ${PYTHON_BINDING_INSTALL_DIR})
 
 install(DIRECTORY ../python/Jetson DESTINATION ${PYTHON_BINDING_INSTALL_DIR})
 install(DIRECTORY ../python/jetson DESTINATION ${PYTHON_BINDING_INSTALL_DIR})
-
Index: git/utils/CMakeLists.txt
===================================================================
--- git.orig/utils/CMakeLists.txt
+++ git/utils/CMakeLists.txt
@@ -64,7 +64,7 @@ endif()
 
 # TODO see if this can be replaced by a FindGStreamer or similar
 include_directories(${PROJECT_INCLUDE_DIR}/jetson-utils)
-include_directories(/usr/include/gstreamer-1.0 /usr/include/glib-2.0 /usr/include/libxml2 /usr/lib/aarch64-linux-gnu/gstreamer-1.0/include /usr/lib/x86_64-linux-gnu/gstreamer-1.0/include/ /usr/lib/aarch64-linux-gnu/glib-2.0/include/ /usr/lib/x86_64-linux-gnu/glib-2.0/include/)
+include_directories(${GSTREAMER_INCLUDE_DIRS} ${GLIB_INCLUDE_DIRS} ${XML_INCLUDE_DIRS})
 
 # build library
 file(GLOB jetsonUtilitySources *.cpp camera/*.cpp codec/*.cpp cuda/*.cu cuda/*.cpp display/*.cpp image/*.cpp input/*.cpp network/*.cpp threads/*.cpp video/*.cpp)
Index: git/utils/python/CMakeLists.txt
===================================================================
--- git.orig/utils/python/CMakeLists.txt
+++ git/utils/python/CMakeLists.txt
@@ -5,7 +5,9 @@
 #
 # If you want to support another version of Python, add it here.
 #
-set(PYTHON_BINDING_VERSIONS 2.7 3.6 3.7)
+if(NOT DEFINED PYTHON_BINDING_VERSIONS)
+  set(PYTHON_BINDING_VERSIONS 2.7 3.6 3.7)
+endif()
 
 message("-- trying to build Python bindings for Python versions:  ${PYTHON_BINDING_VERSIONS}")
 
Index: git/utils/python/bindings/CMakeLists.txt
===================================================================
--- git.orig/utils/python/bindings/CMakeLists.txt
+++ git/utils/python/bindings/CMakeLists.txt
@@ -36,19 +36,26 @@ message("-- found Python library:  ${PYT
 include_directories(${PYTHON_INCLUDE_DIRS})
 
 # attempt to find numpy
-set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${CMAKE_CURRENT_SOURCE_DIR}")
-message("-- CMake module path:  ${CMAKE_MODULE_PATH}")
-find_package(NumPy QUIET)
-
-if(${NUMPY_FOUND})
-	message("-- found NumPy version:  ${NUMPY_VERSION}")
-	message("-- found NumPy include:  ${NUMPY_INCLUDE_DIR}")
+if(DEFINED NUMPY_PATH)
+  set(NUMPY_FOUND 1)
+  add_definitions(-DHAS_NUMPY)
+  include_directories(${NUMPY_PATH}/include)
+  link_directories(${NUMPY_PATH}/lib)
+else()
+  set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${CMAKE_CURRENT_SOURCE_DIR}")
+  message("-- CMake module path:  ${CMAKE_MODULE_PATH}")
+  find_package(NumPy QUIET)
+
+  if(${NUMPY_FOUND})
+    message("-- found NumPy version:  ${NUMPY_VERSION}")
+    message("-- found NumPy include:  ${NUMPY_INCLUDE_DIR}")
 
 	add_definitions(-DHAS_NUMPY)
 	include_directories(${NUMPY_INCLUDE_DIR})
 	link_directories(${NUMPY_INCLUDE_DIR}/../lib)
-else()
+    else()
 	message("-- NumPy not found")
+    endif()
 endif()
 
 # build the bindings
@@ -69,7 +76,9 @@ set_target_properties(jetson-utils-pytho
 					LIBRARY_OUTPUT_DIRECTORY "${CMAKE_LIBRARY_OUTPUT_DIRECTORY}/python/${PYTHON_VERSION_MAJOR}.${PYTHON_VERSION_MINOR}")
 
 # install to /usr/pythonX.X/dist-packages
-set(PYTHON_BINDING_INSTALL_DIR /usr/lib/python${PYTHON_VERSION_MAJOR}.${PYTHON_VERSION_MINOR}/dist-packages)
+if(NOT DEFINED PYTHON_BINDING_INSTALL_DIR)
+  set(PYTHON_BINDING_INSTALL_DIR /usr/lib/python${PYTHON_VERSION_MAJOR}.${PYTHON_VERSION_MINOR}/dist-packages)
+endif()
 
 install(TARGETS jetson-utils-python-${PYTHON_VERSION_MAJOR}${PYTHON_VERSION_MINOR} DESTINATION ${PYTHON_BINDING_INSTALL_DIR})
 
